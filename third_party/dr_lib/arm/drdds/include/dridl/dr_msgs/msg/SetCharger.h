// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file SetCharger.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_DRDDS_MSG_SETCHARGER_H_
#define _FAST_DDS_GENERATED_DRDDS_MSG_SETCHARGER_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "MetaType.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(SETCHARGER_SOURCE)
#define SETCHARGER_DllAPI __declspec( dllexport )
#else
#define SETCHARGER_DllAPI __declspec( dllimport )
#endif // SETCHARGER_SOURCE
#else
#define SETCHARGER_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define SETCHARGER_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace drdds {

namespace msg {



/*!
 * @brief This class represents the structure SetChargeManagerValue defined by the user in the IDL file.
 * @ingroup SetCharger
 */
class SetChargeManagerValue
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport SetChargeManagerValue();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~SetChargeManagerValue();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::msg::SetChargeManagerValue that will be copied.
     */
    eProsima_user_DllExport SetChargeManagerValue(
            const SetChargeManagerValue& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::msg::SetChargeManagerValue that will be copied.
     */
    eProsima_user_DllExport SetChargeManagerValue(
            SetChargeManagerValue&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::msg::SetChargeManagerValue that will be copied.
     */
    eProsima_user_DllExport SetChargeManagerValue& operator =(
            const SetChargeManagerValue& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::msg::SetChargeManagerValue that will be copied.
     */
    eProsima_user_DllExport SetChargeManagerValue& operator =(
            SetChargeManagerValue&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::SetChargeManagerValue object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const SetChargeManagerValue& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::SetChargeManagerValue object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const SetChargeManagerValue& x) const;

    /*!
     * @brief This function sets a value in member command
     * @param _command New value for member command
     */
    eProsima_user_DllExport void command(
            uint32_t _command);

    /*!
     * @brief This function returns the value of member command
     * @return Value of member command
     */
    eProsima_user_DllExport uint32_t command() const;

    /*!
     * @brief This function returns a reference to member command
     * @return Reference to member command
     */
    eProsima_user_DllExport uint32_t& command();

private:

    uint32_t m_command{0};

};


/*!
 * @brief This class represents the structure SetChargeManager defined by the user in the IDL file.
 * @ingroup SetCharger
 */
class SetChargeManager
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport SetChargeManager();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~SetChargeManager();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::msg::SetChargeManager that will be copied.
     */
    eProsima_user_DllExport SetChargeManager(
            const SetChargeManager& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::msg::SetChargeManager that will be copied.
     */
    eProsima_user_DllExport SetChargeManager(
            SetChargeManager&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::msg::SetChargeManager that will be copied.
     */
    eProsima_user_DllExport SetChargeManager& operator =(
            const SetChargeManager& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::msg::SetChargeManager that will be copied.
     */
    eProsima_user_DllExport SetChargeManager& operator =(
            SetChargeManager&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::SetChargeManager object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const SetChargeManager& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::SetChargeManager object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const SetChargeManager& x) const;

    /*!
     * @brief This function copies the value in member header
     * @param _header New value to be copied in member header
     */
    eProsima_user_DllExport void header(
            const drdds::msg::MetaType& _header);

    /*!
     * @brief This function moves the value in member header
     * @param _header New value to be moved in member header
     */
    eProsima_user_DllExport void header(
            drdds::msg::MetaType&& _header);

    /*!
     * @brief This function returns a constant reference to member header
     * @return Constant reference to member header
     */
    eProsima_user_DllExport const drdds::msg::MetaType& header() const;

    /*!
     * @brief This function returns a reference to member header
     * @return Reference to member header
     */
    eProsima_user_DllExport drdds::msg::MetaType& header();


    /*!
     * @brief This function copies the value in member data
     * @param _data New value to be copied in member data
     */
    eProsima_user_DllExport void data(
            const drdds::msg::SetChargeManagerValue& _data);

    /*!
     * @brief This function moves the value in member data
     * @param _data New value to be moved in member data
     */
    eProsima_user_DllExport void data(
            drdds::msg::SetChargeManagerValue&& _data);

    /*!
     * @brief This function returns a constant reference to member data
     * @return Constant reference to member data
     */
    eProsima_user_DllExport const drdds::msg::SetChargeManagerValue& data() const;

    /*!
     * @brief This function returns a reference to member data
     * @return Reference to member data
     */
    eProsima_user_DllExport drdds::msg::SetChargeManagerValue& data();

private:

    drdds::msg::MetaType m_header;
    drdds::msg::SetChargeManagerValue m_data;

};

} // namespace msg

} // namespace drdds

#endif // _FAST_DDS_GENERATED_DRDDS_MSG_SETCHARGER_H_



