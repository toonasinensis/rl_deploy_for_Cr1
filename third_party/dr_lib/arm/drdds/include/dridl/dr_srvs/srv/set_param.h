// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file set_param.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_DRDDS_SRV_SET_PARAM_H_
#define _FAST_DDS_GENERATED_DRDDS_SRV_SET_PARAM_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(SET_PARAM_SOURCE)
#define SET_PARAM_DllAPI __declspec( dllexport )
#else
#define SET_PARAM_DllAPI __declspec( dllimport )
#endif // SET_PARAM_SOURCE
#else
#define SET_PARAM_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define SET_PARAM_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace drdds {

namespace srv {



/*!
 * @brief This class represents the structure SetParam_Request defined by the user in the IDL file.
 * @ingroup set_param
 */
class SetParam_Request
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport SetParam_Request();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~SetParam_Request();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::srv::SetParam_Request that will be copied.
     */
    eProsima_user_DllExport SetParam_Request(
            const SetParam_Request& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::srv::SetParam_Request that will be copied.
     */
    eProsima_user_DllExport SetParam_Request(
            SetParam_Request&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::srv::SetParam_Request that will be copied.
     */
    eProsima_user_DllExport SetParam_Request& operator =(
            const SetParam_Request& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::srv::SetParam_Request that will be copied.
     */
    eProsima_user_DllExport SetParam_Request& operator =(
            SetParam_Request&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::srv::SetParam_Request object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const SetParam_Request& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::srv::SetParam_Request object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const SetParam_Request& x) const;

    /*!
     * @brief This function sets a value in member directLine_mode
     * @param _directLine_mode New value for member directLine_mode
     */
    eProsima_user_DllExport void directLine_mode(
            bool _directLine_mode);

    /*!
     * @brief This function returns the value of member directLine_mode
     * @return Value of member directLine_mode
     */
    eProsima_user_DllExport bool directLine_mode() const;

    /*!
     * @brief This function returns a reference to member directLine_mode
     * @return Reference to member directLine_mode
     */
    eProsima_user_DllExport bool& directLine_mode();


    /*!
     * @brief This function sets a value in member maxSpeedX
     * @param _maxSpeedX New value for member maxSpeedX
     */
    eProsima_user_DllExport void maxSpeedX(
            double _maxSpeedX);

    /*!
     * @brief This function returns the value of member maxSpeedX
     * @return Value of member maxSpeedX
     */
    eProsima_user_DllExport double maxSpeedX() const;

    /*!
     * @brief This function returns a reference to member maxSpeedX
     * @return Reference to member maxSpeedX
     */
    eProsima_user_DllExport double& maxSpeedX();


    /*!
     * @brief This function sets a value in member maxSpeedY
     * @param _maxSpeedY New value for member maxSpeedY
     */
    eProsima_user_DllExport void maxSpeedY(
            double _maxSpeedY);

    /*!
     * @brief This function returns the value of member maxSpeedY
     * @return Value of member maxSpeedY
     */
    eProsima_user_DllExport double maxSpeedY() const;

    /*!
     * @brief This function returns a reference to member maxSpeedY
     * @return Reference to member maxSpeedY
     */
    eProsima_user_DllExport double& maxSpeedY();


    /*!
     * @brief This function sets a value in member maxTheta
     * @param _maxTheta New value for member maxTheta
     */
    eProsima_user_DllExport void maxTheta(
            double _maxTheta);

    /*!
     * @brief This function returns the value of member maxTheta
     * @return Value of member maxTheta
     */
    eProsima_user_DllExport double maxTheta() const;

    /*!
     * @brief This function returns a reference to member maxTheta
     * @return Reference to member maxTheta
     */
    eProsima_user_DllExport double& maxTheta();


    /*!
     * @brief This function sets a value in member barking_deceleration
     * @param _barking_deceleration New value for member barking_deceleration
     */
    eProsima_user_DllExport void barking_deceleration(
            double _barking_deceleration);

    /*!
     * @brief This function returns the value of member barking_deceleration
     * @return Value of member barking_deceleration
     */
    eProsima_user_DllExport double barking_deceleration() const;

    /*!
     * @brief This function returns a reference to member barking_deceleration
     * @return Reference to member barking_deceleration
     */
    eProsima_user_DllExport double& barking_deceleration();


    /*!
     * @brief This function sets a value in member xy_tolerance
     * @param _xy_tolerance New value for member xy_tolerance
     */
    eProsima_user_DllExport void xy_tolerance(
            double _xy_tolerance);

    /*!
     * @brief This function returns the value of member xy_tolerance
     * @return Value of member xy_tolerance
     */
    eProsima_user_DllExport double xy_tolerance() const;

    /*!
     * @brief This function returns a reference to member xy_tolerance
     * @return Reference to member xy_tolerance
     */
    eProsima_user_DllExport double& xy_tolerance();


    /*!
     * @brief This function sets a value in member yaw_tolerance
     * @param _yaw_tolerance New value for member yaw_tolerance
     */
    eProsima_user_DllExport void yaw_tolerance(
            double _yaw_tolerance);

    /*!
     * @brief This function returns the value of member yaw_tolerance
     * @return Value of member yaw_tolerance
     */
    eProsima_user_DllExport double yaw_tolerance() const;

    /*!
     * @brief This function returns a reference to member yaw_tolerance
     * @return Reference to member yaw_tolerance
     */
    eProsima_user_DllExport double& yaw_tolerance();


    /*!
     * @brief This function sets a value in member stop_distance
     * @param _stop_distance New value for member stop_distance
     */
    eProsima_user_DllExport void stop_distance(
            double _stop_distance);

    /*!
     * @brief This function returns the value of member stop_distance
     * @return Value of member stop_distance
     */
    eProsima_user_DllExport double stop_distance() const;

    /*!
     * @brief This function returns a reference to member stop_distance
     * @return Reference to member stop_distance
     */
    eProsima_user_DllExport double& stop_distance();


    /*!
     * @brief This function sets a value in member judge_close
     * @param _judge_close New value for member judge_close
     */
    eProsima_user_DllExport void judge_close(
            double _judge_close);

    /*!
     * @brief This function returns the value of member judge_close
     * @return Value of member judge_close
     */
    eProsima_user_DllExport double judge_close() const;

    /*!
     * @brief This function returns a reference to member judge_close
     * @return Reference to member judge_close
     */
    eProsima_user_DllExport double& judge_close();


    /*!
     * @brief This function sets a value in member backward_mode
     * @param _backward_mode New value for member backward_mode
     */
    eProsima_user_DllExport void backward_mode(
            double _backward_mode);

    /*!
     * @brief This function returns the value of member backward_mode
     * @return Value of member backward_mode
     */
    eProsima_user_DllExport double backward_mode() const;

    /*!
     * @brief This function returns a reference to member backward_mode
     * @return Reference to member backward_mode
     */
    eProsima_user_DllExport double& backward_mode();

private:

    bool m_directLine_mode{false};
    double m_maxSpeedX{0.0};
    double m_maxSpeedY{0.0};
    double m_maxTheta{0.0};
    double m_barking_deceleration{0.0};
    double m_xy_tolerance{0.0};
    double m_yaw_tolerance{0.0};
    double m_stop_distance{0.0};
    double m_judge_close{0.0};
    double m_backward_mode{0.0};

};


/*!
 * @brief This class represents the structure SetParam_Response defined by the user in the IDL file.
 * @ingroup set_param
 */
class SetParam_Response
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport SetParam_Response();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~SetParam_Response();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::srv::SetParam_Response that will be copied.
     */
    eProsima_user_DllExport SetParam_Response(
            const SetParam_Response& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::srv::SetParam_Response that will be copied.
     */
    eProsima_user_DllExport SetParam_Response(
            SetParam_Response&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::srv::SetParam_Response that will be copied.
     */
    eProsima_user_DllExport SetParam_Response& operator =(
            const SetParam_Response& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::srv::SetParam_Response that will be copied.
     */
    eProsima_user_DllExport SetParam_Response& operator =(
            SetParam_Response&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::srv::SetParam_Response object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const SetParam_Response& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::srv::SetParam_Response object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const SetParam_Response& x) const;

    /*!
     * @brief This function sets a value in member is_success
     * @param _is_success New value for member is_success
     */
    eProsima_user_DllExport void is_success(
            bool _is_success);

    /*!
     * @brief This function returns the value of member is_success
     * @return Value of member is_success
     */
    eProsima_user_DllExport bool is_success() const;

    /*!
     * @brief This function returns a reference to member is_success
     * @return Reference to member is_success
     */
    eProsima_user_DllExport bool& is_success();

private:

    bool m_is_success{false};

};

} // namespace srv

} // namespace drdds

#endif // _FAST_DDS_GENERATED_DRDDS_SRV_SET_PARAM_H_



