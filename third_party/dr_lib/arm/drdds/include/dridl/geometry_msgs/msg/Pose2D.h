// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file Pose2D.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_GEOMETRY_MSGS_MSG_POSE2D_H_
#define _FAST_DDS_GENERATED_GEOMETRY_MSGS_MSG_POSE2D_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(POSE2D_SOURCE)
#define POSE2D_DllAPI __declspec( dllexport )
#else
#define POSE2D_DllAPI __declspec( dllimport )
#endif // POSE2D_SOURCE
#else
#define POSE2D_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define POSE2D_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace geometry_msgs {

namespace msg {



/*!
 * @brief This class represents the structure Pose2D defined by the user in the IDL file.
 * @ingroup Pose2D
 */
class Pose2D
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport Pose2D();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~Pose2D();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object geometry_msgs::msg::Pose2D that will be copied.
     */
    eProsima_user_DllExport Pose2D(
            const Pose2D& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object geometry_msgs::msg::Pose2D that will be copied.
     */
    eProsima_user_DllExport Pose2D(
            Pose2D&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object geometry_msgs::msg::Pose2D that will be copied.
     */
    eProsima_user_DllExport Pose2D& operator =(
            const Pose2D& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object geometry_msgs::msg::Pose2D that will be copied.
     */
    eProsima_user_DllExport Pose2D& operator =(
            Pose2D&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x geometry_msgs::msg::Pose2D object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const Pose2D& x) const;

    /*!
     * @brief Comparison operator.
     * @param x geometry_msgs::msg::Pose2D object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const Pose2D& x) const;

    /*!
     * @brief This function sets a value in member x
     * @param _x New value for member x
     */
    eProsima_user_DllExport void x(
            double _x);

    /*!
     * @brief This function returns the value of member x
     * @return Value of member x
     */
    eProsima_user_DllExport double x() const;

    /*!
     * @brief This function returns a reference to member x
     * @return Reference to member x
     */
    eProsima_user_DllExport double& x();


    /*!
     * @brief This function sets a value in member y
     * @param _y New value for member y
     */
    eProsima_user_DllExport void y(
            double _y);

    /*!
     * @brief This function returns the value of member y
     * @return Value of member y
     */
    eProsima_user_DllExport double y() const;

    /*!
     * @brief This function returns a reference to member y
     * @return Reference to member y
     */
    eProsima_user_DllExport double& y();


    /*!
     * @brief This function sets a value in member theta
     * @param _theta New value for member theta
     */
    eProsima_user_DllExport void theta(
            double _theta);

    /*!
     * @brief This function returns the value of member theta
     * @return Value of member theta
     */
    eProsima_user_DllExport double theta() const;

    /*!
     * @brief This function returns a reference to member theta
     * @return Reference to member theta
     */
    eProsima_user_DllExport double& theta();

private:

    double m_x{0.0};
    double m_y{0.0};
    double m_theta{0.0};

};

} // namespace msg

} // namespace geometry_msgs

#endif // _FAST_DDS_GENERATED_GEOMETRY_MSGS_MSG_POSE2D_H_



