// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file MapMetaData.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_NAV_MSGS_MSG_MAPMETADATA_H_
#define _FAST_DDS_GENERATED_NAV_MSGS_MSG_MAPMETADATA_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "builtin_interfaces/msg/Time.h"
#include "geometry_msgs/msg/Pose.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(MAPMETADATA_SOURCE)
#define MAPMETADATA_DllAPI __declspec( dllexport )
#else
#define MAPMETADATA_DllAPI __declspec( dllimport )
#endif // MAPMETADATA_SOURCE
#else
#define MAPMETADATA_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define MAPMETADATA_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace nav_msgs {

namespace msg {



/*!
 * @brief This class represents the structure MapMetaData defined by the user in the IDL file.
 * @ingroup MapMetaData
 */
class MapMetaData
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport MapMetaData();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~MapMetaData();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object nav_msgs::msg::MapMetaData that will be copied.
     */
    eProsima_user_DllExport MapMetaData(
            const MapMetaData& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object nav_msgs::msg::MapMetaData that will be copied.
     */
    eProsima_user_DllExport MapMetaData(
            MapMetaData&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object nav_msgs::msg::MapMetaData that will be copied.
     */
    eProsima_user_DllExport MapMetaData& operator =(
            const MapMetaData& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object nav_msgs::msg::MapMetaData that will be copied.
     */
    eProsima_user_DllExport MapMetaData& operator =(
            MapMetaData&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x nav_msgs::msg::MapMetaData object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const MapMetaData& x) const;

    /*!
     * @brief Comparison operator.
     * @param x nav_msgs::msg::MapMetaData object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const MapMetaData& x) const;

    /*!
     * @brief This function copies the value in member map_load_time
     * @param _map_load_time New value to be copied in member map_load_time
     */
    eProsima_user_DllExport void map_load_time(
            const builtin_interfaces::msg::Time& _map_load_time);

    /*!
     * @brief This function moves the value in member map_load_time
     * @param _map_load_time New value to be moved in member map_load_time
     */
    eProsima_user_DllExport void map_load_time(
            builtin_interfaces::msg::Time&& _map_load_time);

    /*!
     * @brief This function returns a constant reference to member map_load_time
     * @return Constant reference to member map_load_time
     */
    eProsima_user_DllExport const builtin_interfaces::msg::Time& map_load_time() const;

    /*!
     * @brief This function returns a reference to member map_load_time
     * @return Reference to member map_load_time
     */
    eProsima_user_DllExport builtin_interfaces::msg::Time& map_load_time();


    /*!
     * @brief This function sets a value in member resolution
     * @param _resolution New value for member resolution
     */
    eProsima_user_DllExport void resolution(
            float _resolution);

    /*!
     * @brief This function returns the value of member resolution
     * @return Value of member resolution
     */
    eProsima_user_DllExport float resolution() const;

    /*!
     * @brief This function returns a reference to member resolution
     * @return Reference to member resolution
     */
    eProsima_user_DllExport float& resolution();


    /*!
     * @brief This function sets a value in member width
     * @param _width New value for member width
     */
    eProsima_user_DllExport void width(
            uint32_t _width);

    /*!
     * @brief This function returns the value of member width
     * @return Value of member width
     */
    eProsima_user_DllExport uint32_t width() const;

    /*!
     * @brief This function returns a reference to member width
     * @return Reference to member width
     */
    eProsima_user_DllExport uint32_t& width();


    /*!
     * @brief This function sets a value in member height
     * @param _height New value for member height
     */
    eProsima_user_DllExport void height(
            uint32_t _height);

    /*!
     * @brief This function returns the value of member height
     * @return Value of member height
     */
    eProsima_user_DllExport uint32_t height() const;

    /*!
     * @brief This function returns a reference to member height
     * @return Reference to member height
     */
    eProsima_user_DllExport uint32_t& height();


    /*!
     * @brief This function copies the value in member origin
     * @param _origin New value to be copied in member origin
     */
    eProsima_user_DllExport void origin(
            const geometry_msgs::msg::Pose& _origin);

    /*!
     * @brief This function moves the value in member origin
     * @param _origin New value to be moved in member origin
     */
    eProsima_user_DllExport void origin(
            geometry_msgs::msg::Pose&& _origin);

    /*!
     * @brief This function returns a constant reference to member origin
     * @return Constant reference to member origin
     */
    eProsima_user_DllExport const geometry_msgs::msg::Pose& origin() const;

    /*!
     * @brief This function returns a reference to member origin
     * @return Reference to member origin
     */
    eProsima_user_DllExport geometry_msgs::msg::Pose& origin();

private:

    builtin_interfaces::msg::Time m_map_load_time;
    float m_resolution{0.0};
    uint32_t m_width{0};
    uint32_t m_height{0};
    geometry_msgs::msg::Pose m_origin;

};

} // namespace msg

} // namespace nav_msgs

#endif // _FAST_DDS_GENERATED_NAV_MSGS_MSG_MAPMETADATA_H_



