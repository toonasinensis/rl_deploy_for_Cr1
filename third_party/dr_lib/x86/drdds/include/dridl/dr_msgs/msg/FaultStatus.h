// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file FaultStatus.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_DRDDS_MSG_FAULTSTATUS_H_
#define _FAST_DDS_GENERATED_DRDDS_MSG_FAULTSTATUS_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "MetaType.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(FAULTSTATUS_SOURCE)
#define FAULTSTATUS_DllAPI __declspec( dllexport )
#else
#define FAULTSTATUS_DllAPI __declspec( dllimport )
#endif // FAULTSTATUS_SOURCE
#else
#define FAULTSTATUS_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define FAULTSTATUS_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace drdds {

namespace msg {



/*!
 * @brief This class represents the structure FaultStatusValue defined by the user in the IDL file.
 * @ingroup FaultStatus
 */
class FaultStatusValue
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport FaultStatusValue();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~FaultStatusValue();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::msg::FaultStatusValue that will be copied.
     */
    eProsima_user_DllExport FaultStatusValue(
            const FaultStatusValue& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::msg::FaultStatusValue that will be copied.
     */
    eProsima_user_DllExport FaultStatusValue(
            FaultStatusValue&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::msg::FaultStatusValue that will be copied.
     */
    eProsima_user_DllExport FaultStatusValue& operator =(
            const FaultStatusValue& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::msg::FaultStatusValue that will be copied.
     */
    eProsima_user_DllExport FaultStatusValue& operator =(
            FaultStatusValue&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::FaultStatusValue object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const FaultStatusValue& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::FaultStatusValue object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const FaultStatusValue& x) const;

    /*!
     * @brief This function sets a value in member imu_error
     * @param _imu_error New value for member imu_error
     */
    eProsima_user_DllExport void imu_error(
            bool _imu_error);

    /*!
     * @brief This function returns the value of member imu_error
     * @return Value of member imu_error
     */
    eProsima_user_DllExport bool imu_error() const;

    /*!
     * @brief This function returns a reference to member imu_error
     * @return Reference to member imu_error
     */
    eProsima_user_DllExport bool& imu_error();


    /*!
     * @brief This function sets a value in member wifi_error
     * @param _wifi_error New value for member wifi_error
     */
    eProsima_user_DllExport void wifi_error(
            bool _wifi_error);

    /*!
     * @brief This function returns the value of member wifi_error
     * @return Value of member wifi_error
     */
    eProsima_user_DllExport bool wifi_error() const;

    /*!
     * @brief This function returns a reference to member wifi_error
     * @return Reference to member wifi_error
     */
    eProsima_user_DllExport bool& wifi_error();


    /*!
     * @brief This function sets a value in member driver_heat_warn
     * @param _driver_heat_warn New value for member driver_heat_warn
     */
    eProsima_user_DllExport void driver_heat_warn(
            uint32_t _driver_heat_warn);

    /*!
     * @brief This function returns the value of member driver_heat_warn
     * @return Value of member driver_heat_warn
     */
    eProsima_user_DllExport uint32_t driver_heat_warn() const;

    /*!
     * @brief This function returns a reference to member driver_heat_warn
     * @return Reference to member driver_heat_warn
     */
    eProsima_user_DllExport uint32_t& driver_heat_warn();


    /*!
     * @brief This function sets a value in member driver_heat_error
     * @param _driver_heat_error New value for member driver_heat_error
     */
    eProsima_user_DllExport void driver_heat_error(
            uint32_t _driver_heat_error);

    /*!
     * @brief This function returns the value of member driver_heat_error
     * @return Value of member driver_heat_error
     */
    eProsima_user_DllExport uint32_t driver_heat_error() const;

    /*!
     * @brief This function returns a reference to member driver_heat_error
     * @return Reference to member driver_heat_error
     */
    eProsima_user_DllExport uint32_t& driver_heat_error();


    /*!
     * @brief This function sets a value in member motor_heat_warn
     * @param _motor_heat_warn New value for member motor_heat_warn
     */
    eProsima_user_DllExport void motor_heat_warn(
            uint32_t _motor_heat_warn);

    /*!
     * @brief This function returns the value of member motor_heat_warn
     * @return Value of member motor_heat_warn
     */
    eProsima_user_DllExport uint32_t motor_heat_warn() const;

    /*!
     * @brief This function returns a reference to member motor_heat_warn
     * @return Reference to member motor_heat_warn
     */
    eProsima_user_DllExport uint32_t& motor_heat_warn();


    /*!
     * @brief This function sets a value in member motor_heat_error
     * @param _motor_heat_error New value for member motor_heat_error
     */
    eProsima_user_DllExport void motor_heat_error(
            uint32_t _motor_heat_error);

    /*!
     * @brief This function returns the value of member motor_heat_error
     * @return Value of member motor_heat_error
     */
    eProsima_user_DllExport uint32_t motor_heat_error() const;

    /*!
     * @brief This function returns a reference to member motor_heat_error
     * @return Reference to member motor_heat_error
     */
    eProsima_user_DllExport uint32_t& motor_heat_error();


    /*!
     * @brief This function sets a value in member battery_low_warn
     * @param _battery_low_warn New value for member battery_low_warn
     */
    eProsima_user_DllExport void battery_low_warn(
            uint32_t _battery_low_warn);

    /*!
     * @brief This function returns the value of member battery_low_warn
     * @return Value of member battery_low_warn
     */
    eProsima_user_DllExport uint32_t battery_low_warn() const;

    /*!
     * @brief This function returns a reference to member battery_low_warn
     * @return Reference to member battery_low_warn
     */
    eProsima_user_DllExport uint32_t& battery_low_warn();


    /*!
     * @brief This function sets a value in member battery_low_error
     * @param _battery_low_error New value for member battery_low_error
     */
    eProsima_user_DllExport void battery_low_error(
            uint32_t _battery_low_error);

    /*!
     * @brief This function returns the value of member battery_low_error
     * @return Value of member battery_low_error
     */
    eProsima_user_DllExport uint32_t battery_low_error() const;

    /*!
     * @brief This function returns a reference to member battery_low_error
     * @return Reference to member battery_low_error
     */
    eProsima_user_DllExport uint32_t& battery_low_error();


    /*!
     * @brief This function sets a value in member battery_voltage_warn
     * @param _battery_voltage_warn New value for member battery_voltage_warn
     */
    eProsima_user_DllExport void battery_voltage_warn(
            uint32_t _battery_voltage_warn);

    /*!
     * @brief This function returns the value of member battery_voltage_warn
     * @return Value of member battery_voltage_warn
     */
    eProsima_user_DllExport uint32_t battery_voltage_warn() const;

    /*!
     * @brief This function returns a reference to member battery_voltage_warn
     * @return Reference to member battery_voltage_warn
     */
    eProsima_user_DllExport uint32_t& battery_voltage_warn();


    /*!
     * @brief This function sets a value in member battery_voltage_error
     * @param _battery_voltage_error New value for member battery_voltage_error
     */
    eProsima_user_DllExport void battery_voltage_error(
            uint32_t _battery_voltage_error);

    /*!
     * @brief This function returns the value of member battery_voltage_error
     * @return Value of member battery_voltage_error
     */
    eProsima_user_DllExport uint32_t battery_voltage_error() const;

    /*!
     * @brief This function returns a reference to member battery_voltage_error
     * @return Reference to member battery_voltage_error
     */
    eProsima_user_DllExport uint32_t& battery_voltage_error();


    /*!
     * @brief This function sets a value in member battery_heat_warn
     * @param _battery_heat_warn New value for member battery_heat_warn
     */
    eProsima_user_DllExport void battery_heat_warn(
            uint32_t _battery_heat_warn);

    /*!
     * @brief This function returns the value of member battery_heat_warn
     * @return Value of member battery_heat_warn
     */
    eProsima_user_DllExport uint32_t battery_heat_warn() const;

    /*!
     * @brief This function returns a reference to member battery_heat_warn
     * @return Reference to member battery_heat_warn
     */
    eProsima_user_DllExport uint32_t& battery_heat_warn();


    /*!
     * @brief This function sets a value in member battery_heat_error
     * @param _battery_heat_error New value for member battery_heat_error
     */
    eProsima_user_DllExport void battery_heat_error(
            uint32_t _battery_heat_error);

    /*!
     * @brief This function returns the value of member battery_heat_error
     * @return Value of member battery_heat_error
     */
    eProsima_user_DllExport uint32_t battery_heat_error() const;

    /*!
     * @brief This function returns a reference to member battery_heat_error
     * @return Reference to member battery_heat_error
     */
    eProsima_user_DllExport uint32_t& battery_heat_error();


    /*!
     * @brief This function sets a value in member cpu_heat_warn
     * @param _cpu_heat_warn New value for member cpu_heat_warn
     */
    eProsima_user_DllExport void cpu_heat_warn(
            uint32_t _cpu_heat_warn);

    /*!
     * @brief This function returns the value of member cpu_heat_warn
     * @return Value of member cpu_heat_warn
     */
    eProsima_user_DllExport uint32_t cpu_heat_warn() const;

    /*!
     * @brief This function returns a reference to member cpu_heat_warn
     * @return Reference to member cpu_heat_warn
     */
    eProsima_user_DllExport uint32_t& cpu_heat_warn();


    /*!
     * @brief This function sets a value in member cpu_freq_warn
     * @param _cpu_freq_warn New value for member cpu_freq_warn
     */
    eProsima_user_DllExport void cpu_freq_warn(
            uint32_t _cpu_freq_warn);

    /*!
     * @brief This function returns the value of member cpu_freq_warn
     * @return Value of member cpu_freq_warn
     */
    eProsima_user_DllExport uint32_t cpu_freq_warn() const;

    /*!
     * @brief This function returns a reference to member cpu_freq_warn
     * @return Reference to member cpu_freq_warn
     */
    eProsima_user_DllExport uint32_t& cpu_freq_warn();

private:

    bool m_imu_error{false};
    bool m_wifi_error{false};
    uint32_t m_driver_heat_warn{0};
    uint32_t m_driver_heat_error{0};
    uint32_t m_motor_heat_warn{0};
    uint32_t m_motor_heat_error{0};
    uint32_t m_battery_low_warn{0};
    uint32_t m_battery_low_error{0};
    uint32_t m_battery_voltage_warn{0};
    uint32_t m_battery_voltage_error{0};
    uint32_t m_battery_heat_warn{0};
    uint32_t m_battery_heat_error{0};
    uint32_t m_cpu_heat_warn{0};
    uint32_t m_cpu_freq_warn{0};

};


/*!
 * @brief This class represents the structure FaultStatus defined by the user in the IDL file.
 * @ingroup FaultStatus
 */
class FaultStatus
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport FaultStatus();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~FaultStatus();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::msg::FaultStatus that will be copied.
     */
    eProsima_user_DllExport FaultStatus(
            const FaultStatus& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::msg::FaultStatus that will be copied.
     */
    eProsima_user_DllExport FaultStatus(
            FaultStatus&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::msg::FaultStatus that will be copied.
     */
    eProsima_user_DllExport FaultStatus& operator =(
            const FaultStatus& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::msg::FaultStatus that will be copied.
     */
    eProsima_user_DllExport FaultStatus& operator =(
            FaultStatus&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::FaultStatus object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const FaultStatus& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::FaultStatus object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const FaultStatus& x) const;

    /*!
     * @brief This function copies the value in member header
     * @param _header New value to be copied in member header
     */
    eProsima_user_DllExport void header(
            const drdds::msg::MetaType& _header);

    /*!
     * @brief This function moves the value in member header
     * @param _header New value to be moved in member header
     */
    eProsima_user_DllExport void header(
            drdds::msg::MetaType&& _header);

    /*!
     * @brief This function returns a constant reference to member header
     * @return Constant reference to member header
     */
    eProsima_user_DllExport const drdds::msg::MetaType& header() const;

    /*!
     * @brief This function returns a reference to member header
     * @return Reference to member header
     */
    eProsima_user_DllExport drdds::msg::MetaType& header();


    /*!
     * @brief This function copies the value in member data
     * @param _data New value to be copied in member data
     */
    eProsima_user_DllExport void data(
            const drdds::msg::FaultStatusValue& _data);

    /*!
     * @brief This function moves the value in member data
     * @param _data New value to be moved in member data
     */
    eProsima_user_DllExport void data(
            drdds::msg::FaultStatusValue&& _data);

    /*!
     * @brief This function returns a constant reference to member data
     * @return Constant reference to member data
     */
    eProsima_user_DllExport const drdds::msg::FaultStatusValue& data() const;

    /*!
     * @brief This function returns a reference to member data
     * @return Reference to member data
     */
    eProsima_user_DllExport drdds::msg::FaultStatusValue& data();

private:

    drdds::msg::MetaType m_header;
    drdds::msg::FaultStatusValue m_data;

};

} // namespace msg

} // namespace drdds

#endif // _FAST_DDS_GENERATED_DRDDS_MSG_FAULTSTATUS_H_



