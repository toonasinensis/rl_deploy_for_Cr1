// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file ImuData.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_DRDDS_MSG_IMUDATA_H_
#define _FAST_DDS_GENERATED_DRDDS_MSG_IMUDATA_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "MetaType.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(IMUDATA_SOURCE)
#define IMUDATA_DllAPI __declspec( dllexport )
#else
#define IMUDATA_DllAPI __declspec( dllimport )
#endif // IMUDATA_SOURCE
#else
#define IMUDATA_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define IMUDATA_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace drdds {

namespace msg {



/*!
 * @brief This class represents the structure ImuDataValue defined by the user in the IDL file.
 * @ingroup ImuData
 */
class ImuDataValue
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport ImuDataValue();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~ImuDataValue();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::msg::ImuDataValue that will be copied.
     */
    eProsima_user_DllExport ImuDataValue(
            const ImuDataValue& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::msg::ImuDataValue that will be copied.
     */
    eProsima_user_DllExport ImuDataValue(
            ImuDataValue&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::msg::ImuDataValue that will be copied.
     */
    eProsima_user_DllExport ImuDataValue& operator =(
            const ImuDataValue& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::msg::ImuDataValue that will be copied.
     */
    eProsima_user_DllExport ImuDataValue& operator =(
            ImuDataValue&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::ImuDataValue object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const ImuDataValue& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::ImuDataValue object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const ImuDataValue& x) const;

    /*!
     * @brief This function sets a value in member roll
     * @param _roll New value for member roll
     */
    eProsima_user_DllExport void roll(
            float _roll);

    /*!
     * @brief This function returns the value of member roll
     * @return Value of member roll
     */
    eProsima_user_DllExport float roll() const;

    /*!
     * @brief This function returns a reference to member roll
     * @return Reference to member roll
     */
    eProsima_user_DllExport float& roll();


    /*!
     * @brief This function sets a value in member pitch
     * @param _pitch New value for member pitch
     */
    eProsima_user_DllExport void pitch(
            float _pitch);

    /*!
     * @brief This function returns the value of member pitch
     * @return Value of member pitch
     */
    eProsima_user_DllExport float pitch() const;

    /*!
     * @brief This function returns a reference to member pitch
     * @return Reference to member pitch
     */
    eProsima_user_DllExport float& pitch();


    /*!
     * @brief This function sets a value in member yaw
     * @param _yaw New value for member yaw
     */
    eProsima_user_DllExport void yaw(
            float _yaw);

    /*!
     * @brief This function returns the value of member yaw
     * @return Value of member yaw
     */
    eProsima_user_DllExport float yaw() const;

    /*!
     * @brief This function returns a reference to member yaw
     * @return Reference to member yaw
     */
    eProsima_user_DllExport float& yaw();


    /*!
     * @brief This function sets a value in member omega_x
     * @param _omega_x New value for member omega_x
     */
    eProsima_user_DllExport void omega_x(
            float _omega_x);

    /*!
     * @brief This function returns the value of member omega_x
     * @return Value of member omega_x
     */
    eProsima_user_DllExport float omega_x() const;

    /*!
     * @brief This function returns a reference to member omega_x
     * @return Reference to member omega_x
     */
    eProsima_user_DllExport float& omega_x();


    /*!
     * @brief This function sets a value in member omega_y
     * @param _omega_y New value for member omega_y
     */
    eProsima_user_DllExport void omega_y(
            float _omega_y);

    /*!
     * @brief This function returns the value of member omega_y
     * @return Value of member omega_y
     */
    eProsima_user_DllExport float omega_y() const;

    /*!
     * @brief This function returns a reference to member omega_y
     * @return Reference to member omega_y
     */
    eProsima_user_DllExport float& omega_y();


    /*!
     * @brief This function sets a value in member omega_z
     * @param _omega_z New value for member omega_z
     */
    eProsima_user_DllExport void omega_z(
            float _omega_z);

    /*!
     * @brief This function returns the value of member omega_z
     * @return Value of member omega_z
     */
    eProsima_user_DllExport float omega_z() const;

    /*!
     * @brief This function returns a reference to member omega_z
     * @return Reference to member omega_z
     */
    eProsima_user_DllExport float& omega_z();


    /*!
     * @brief This function sets a value in member acc_x
     * @param _acc_x New value for member acc_x
     */
    eProsima_user_DllExport void acc_x(
            float _acc_x);

    /*!
     * @brief This function returns the value of member acc_x
     * @return Value of member acc_x
     */
    eProsima_user_DllExport float acc_x() const;

    /*!
     * @brief This function returns a reference to member acc_x
     * @return Reference to member acc_x
     */
    eProsima_user_DllExport float& acc_x();


    /*!
     * @brief This function sets a value in member acc_y
     * @param _acc_y New value for member acc_y
     */
    eProsima_user_DllExport void acc_y(
            float _acc_y);

    /*!
     * @brief This function returns the value of member acc_y
     * @return Value of member acc_y
     */
    eProsima_user_DllExport float acc_y() const;

    /*!
     * @brief This function returns a reference to member acc_y
     * @return Reference to member acc_y
     */
    eProsima_user_DllExport float& acc_y();


    /*!
     * @brief This function sets a value in member acc_z
     * @param _acc_z New value for member acc_z
     */
    eProsima_user_DllExport void acc_z(
            float _acc_z);

    /*!
     * @brief This function returns the value of member acc_z
     * @return Value of member acc_z
     */
    eProsima_user_DllExport float acc_z() const;

    /*!
     * @brief This function returns a reference to member acc_z
     * @return Reference to member acc_z
     */
    eProsima_user_DllExport float& acc_z();

private:

    float m_roll{0.0};
    float m_pitch{0.0};
    float m_yaw{0.0};
    float m_omega_x{0.0};
    float m_omega_y{0.0};
    float m_omega_z{0.0};
    float m_acc_x{0.0};
    float m_acc_y{0.0};
    float m_acc_z{0.0};

};


/*!
 * @brief This class represents the structure ImuData defined by the user in the IDL file.
 * @ingroup ImuData
 */
class ImuData
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport ImuData();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~ImuData();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::msg::ImuData that will be copied.
     */
    eProsima_user_DllExport ImuData(
            const ImuData& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::msg::ImuData that will be copied.
     */
    eProsima_user_DllExport ImuData(
            ImuData&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::msg::ImuData that will be copied.
     */
    eProsima_user_DllExport ImuData& operator =(
            const ImuData& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::msg::ImuData that will be copied.
     */
    eProsima_user_DllExport ImuData& operator =(
            ImuData&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::ImuData object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const ImuData& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::ImuData object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const ImuData& x) const;

    /*!
     * @brief This function copies the value in member header
     * @param _header New value to be copied in member header
     */
    eProsima_user_DllExport void header(
            const drdds::msg::MetaType& _header);

    /*!
     * @brief This function moves the value in member header
     * @param _header New value to be moved in member header
     */
    eProsima_user_DllExport void header(
            drdds::msg::MetaType&& _header);

    /*!
     * @brief This function returns a constant reference to member header
     * @return Constant reference to member header
     */
    eProsima_user_DllExport const drdds::msg::MetaType& header() const;

    /*!
     * @brief This function returns a reference to member header
     * @return Reference to member header
     */
    eProsima_user_DllExport drdds::msg::MetaType& header();


    /*!
     * @brief This function copies the value in member data
     * @param _data New value to be copied in member data
     */
    eProsima_user_DllExport void data(
            const drdds::msg::ImuDataValue& _data);

    /*!
     * @brief This function moves the value in member data
     * @param _data New value to be moved in member data
     */
    eProsima_user_DllExport void data(
            drdds::msg::ImuDataValue&& _data);

    /*!
     * @brief This function returns a constant reference to member data
     * @return Constant reference to member data
     */
    eProsima_user_DllExport const drdds::msg::ImuDataValue& data() const;

    /*!
     * @brief This function returns a reference to member data
     * @return Reference to member data
     */
    eProsima_user_DllExport drdds::msg::ImuDataValue& data();

private:

    drdds::msg::MetaType m_header;
    drdds::msg::ImuDataValue m_data;

};

} // namespace msg

} // namespace drdds

#endif // _FAST_DDS_GENERATED_DRDDS_MSG_IMUDATA_H_



