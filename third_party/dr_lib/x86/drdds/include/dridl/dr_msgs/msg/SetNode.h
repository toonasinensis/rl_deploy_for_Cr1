// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file SetNode.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_DRDDS_MSG_SETNODE_H_
#define _FAST_DDS_GENERATED_DRDDS_MSG_SETNODE_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "MetaType.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(SETNODE_SOURCE)
#define SETNODE_DllAPI __declspec( dllexport )
#else
#define SETNODE_DllAPI __declspec( dllimport )
#endif // SETNODE_SOURCE
#else
#define SETNODE_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define SETNODE_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace drdds {

namespace msg {



/*!
 * @brief This class represents the structure SetNodeValue defined by the user in the IDL file.
 * @ingroup SetNode
 */
class SetNodeValue
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport SetNodeValue();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~SetNodeValue();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::msg::SetNodeValue that will be copied.
     */
    eProsima_user_DllExport SetNodeValue(
            const SetNodeValue& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::msg::SetNodeValue that will be copied.
     */
    eProsima_user_DllExport SetNodeValue(
            SetNodeValue&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::msg::SetNodeValue that will be copied.
     */
    eProsima_user_DllExport SetNodeValue& operator =(
            const SetNodeValue& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::msg::SetNodeValue that will be copied.
     */
    eProsima_user_DllExport SetNodeValue& operator =(
            SetNodeValue&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::SetNodeValue object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const SetNodeValue& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::SetNodeValue object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const SetNodeValue& x) const;

    /*!
     * @brief This function sets a value in member module_id
     * @param _module_id New value for member module_id
     */
    eProsima_user_DllExport void module_id(
            uint16_t _module_id);

    /*!
     * @brief This function returns the value of member module_id
     * @return Value of member module_id
     */
    eProsima_user_DllExport uint16_t module_id() const;

    /*!
     * @brief This function returns a reference to member module_id
     * @return Reference to member module_id
     */
    eProsima_user_DllExport uint16_t& module_id();


    /*!
     * @brief This function sets a value in member node_id
     * @param _node_id New value for member node_id
     */
    eProsima_user_DllExport void node_id(
            uint16_t _node_id);

    /*!
     * @brief This function returns the value of member node_id
     * @return Value of member node_id
     */
    eProsima_user_DllExport uint16_t node_id() const;

    /*!
     * @brief This function returns a reference to member node_id
     * @return Reference to member node_id
     */
    eProsima_user_DllExport uint16_t& node_id();


    /*!
     * @brief This function sets a value in member exe_code
     * @param _exe_code New value for member exe_code
     */
    eProsima_user_DllExport void exe_code(
            uint16_t _exe_code);

    /*!
     * @brief This function returns the value of member exe_code
     * @return Value of member exe_code
     */
    eProsima_user_DllExport uint16_t exe_code() const;

    /*!
     * @brief This function returns a reference to member exe_code
     * @return Reference to member exe_code
     */
    eProsima_user_DllExport uint16_t& exe_code();

private:

    uint16_t m_module_id{0};
    uint16_t m_node_id{0};
    uint16_t m_exe_code{0};

};


/*!
 * @brief This class represents the structure SetNode defined by the user in the IDL file.
 * @ingroup SetNode
 */
class SetNode
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport SetNode();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~SetNode();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object drdds::msg::SetNode that will be copied.
     */
    eProsima_user_DllExport SetNode(
            const SetNode& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object drdds::msg::SetNode that will be copied.
     */
    eProsima_user_DllExport SetNode(
            SetNode&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object drdds::msg::SetNode that will be copied.
     */
    eProsima_user_DllExport SetNode& operator =(
            const SetNode& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object drdds::msg::SetNode that will be copied.
     */
    eProsima_user_DllExport SetNode& operator =(
            SetNode&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::SetNode object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const SetNode& x) const;

    /*!
     * @brief Comparison operator.
     * @param x drdds::msg::SetNode object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const SetNode& x) const;

    /*!
     * @brief This function copies the value in member header
     * @param _header New value to be copied in member header
     */
    eProsima_user_DllExport void header(
            const drdds::msg::MetaType& _header);

    /*!
     * @brief This function moves the value in member header
     * @param _header New value to be moved in member header
     */
    eProsima_user_DllExport void header(
            drdds::msg::MetaType&& _header);

    /*!
     * @brief This function returns a constant reference to member header
     * @return Constant reference to member header
     */
    eProsima_user_DllExport const drdds::msg::MetaType& header() const;

    /*!
     * @brief This function returns a reference to member header
     * @return Reference to member header
     */
    eProsima_user_DllExport drdds::msg::MetaType& header();


    /*!
     * @brief This function copies the value in member data
     * @param _data New value to be copied in member data
     */
    eProsima_user_DllExport void data(
            const drdds::msg::SetNodeValue& _data);

    /*!
     * @brief This function moves the value in member data
     * @param _data New value to be moved in member data
     */
    eProsima_user_DllExport void data(
            drdds::msg::SetNodeValue&& _data);

    /*!
     * @brief This function returns a constant reference to member data
     * @return Constant reference to member data
     */
    eProsima_user_DllExport const drdds::msg::SetNodeValue& data() const;

    /*!
     * @brief This function returns a reference to member data
     * @return Reference to member data
     */
    eProsima_user_DllExport drdds::msg::SetNodeValue& data();

private:

    drdds::msg::MetaType m_header;
    drdds::msg::SetNodeValue m_data;

};

} // namespace msg

} // namespace drdds

#endif // _FAST_DDS_GENERATED_DRDDS_MSG_SETNODE_H_



