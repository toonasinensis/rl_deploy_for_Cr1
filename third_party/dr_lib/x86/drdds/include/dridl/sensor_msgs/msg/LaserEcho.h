// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file LaserEcho.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_SENSOR_MSGS_MSG_LASERECHO_H_
#define _FAST_DDS_GENERATED_SENSOR_MSGS_MSG_LASERECHO_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(LASERECHO_SOURCE)
#define LASERECHO_DllAPI __declspec( dllexport )
#else
#define LASERECHO_DllAPI __declspec( dllimport )
#endif // LASERECHO_SOURCE
#else
#define LASERECHO_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define LASERECHO_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace sensor_msgs {

namespace msg {





/*!
 * @brief This class represents the structure LaserEcho defined by the user in the IDL file.
 * @ingroup LaserEcho
 */
class LaserEcho
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport LaserEcho();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~LaserEcho();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object sensor_msgs::msg::LaserEcho that will be copied.
     */
    eProsima_user_DllExport LaserEcho(
            const LaserEcho& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object sensor_msgs::msg::LaserEcho that will be copied.
     */
    eProsima_user_DllExport LaserEcho(
            LaserEcho&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object sensor_msgs::msg::LaserEcho that will be copied.
     */
    eProsima_user_DllExport LaserEcho& operator =(
            const LaserEcho& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object sensor_msgs::msg::LaserEcho that will be copied.
     */
    eProsima_user_DllExport LaserEcho& operator =(
            LaserEcho&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x sensor_msgs::msg::LaserEcho object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const LaserEcho& x) const;

    /*!
     * @brief Comparison operator.
     * @param x sensor_msgs::msg::LaserEcho object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const LaserEcho& x) const;

    /*!
     * @brief This function copies the value in member echoes
     * @param _echoes New value to be copied in member echoes
     */
    eProsima_user_DllExport void echoes(
            const std::vector<float>& _echoes);

    /*!
     * @brief This function moves the value in member echoes
     * @param _echoes New value to be moved in member echoes
     */
    eProsima_user_DllExport void echoes(
            std::vector<float>&& _echoes);

    /*!
     * @brief This function returns a constant reference to member echoes
     * @return Constant reference to member echoes
     */
    eProsima_user_DllExport const std::vector<float>& echoes() const;

    /*!
     * @brief This function returns a reference to member echoes
     * @return Reference to member echoes
     */
    eProsima_user_DllExport std::vector<float>& echoes();

private:

    std::vector<float> m_echoes;

};

} // namespace msg

} // namespace sensor_msgs

#endif // _FAST_DDS_GENERATED_SENSOR_MSGS_MSG_LASERECHO_H_



