// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file NavSatStatus.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_SENSOR_MSGS_MSG_NAVSATSTATUS_H_
#define _FAST_DDS_GENERATED_SENSOR_MSGS_MSG_NAVSATSTATUS_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(NAVSATSTATUS_SOURCE)
#define NAVSATSTATUS_DllAPI __declspec( dllexport )
#else
#define NAVSATSTATUS_DllAPI __declspec( dllimport )
#endif // NAVSATSTATUS_SOURCE
#else
#define NAVSATSTATUS_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define NAVSATSTATUS_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace sensor_msgs {

namespace msg {

namespace NavSatStatus_Constants {

const int8_t STATUS_NO_FIX = -1;
const int8_t STATUS_FIX = 0;
const int8_t STATUS_SBAS_FIX = 1;
const int8_t STATUS_GBAS_FIX = 2;
const uint16_t SERVICE_GPS = 1;
const uint16_t SERVICE_GLONASS = 2;
const uint16_t SERVICE_COMPASS = 4;
const uint16_t SERVICE_GALILEO = 8;

} // namespace NavSatStatus_Constants


/*!
 * @brief This class represents the structure NavSatStatus defined by the user in the IDL file.
 * @ingroup NavSatStatus
 */
class NavSatStatus
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport NavSatStatus();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~NavSatStatus();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object sensor_msgs::msg::NavSatStatus that will be copied.
     */
    eProsima_user_DllExport NavSatStatus(
            const NavSatStatus& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object sensor_msgs::msg::NavSatStatus that will be copied.
     */
    eProsima_user_DllExport NavSatStatus(
            NavSatStatus&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object sensor_msgs::msg::NavSatStatus that will be copied.
     */
    eProsima_user_DllExport NavSatStatus& operator =(
            const NavSatStatus& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object sensor_msgs::msg::NavSatStatus that will be copied.
     */
    eProsima_user_DllExport NavSatStatus& operator =(
            NavSatStatus&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x sensor_msgs::msg::NavSatStatus object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const NavSatStatus& x) const;

    /*!
     * @brief Comparison operator.
     * @param x sensor_msgs::msg::NavSatStatus object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const NavSatStatus& x) const;

    /*!
     * @brief This function sets a value in member status
     * @param _status New value for member status
     */
    eProsima_user_DllExport void status(
            int8_t _status);

    /*!
     * @brief This function returns the value of member status
     * @return Value of member status
     */
    eProsima_user_DllExport int8_t status() const;

    /*!
     * @brief This function returns a reference to member status
     * @return Reference to member status
     */
    eProsima_user_DllExport int8_t& status();


    /*!
     * @brief This function sets a value in member service
     * @param _service New value for member service
     */
    eProsima_user_DllExport void service(
            uint16_t _service);

    /*!
     * @brief This function returns the value of member service
     * @return Value of member service
     */
    eProsima_user_DllExport uint16_t service() const;

    /*!
     * @brief This function returns a reference to member service
     * @return Reference to member service
     */
    eProsima_user_DllExport uint16_t& service();

private:

    int8_t m_status{0};
    uint16_t m_service{0};

};

} // namespace msg

} // namespace sensor_msgs

#endif // _FAST_DDS_GENERATED_SENSOR_MSGS_MSG_NAVSATSTATUS_H_



